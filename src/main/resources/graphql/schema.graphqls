type Query {
	#Usuario
    allUsuarios: [Usuario],
    usuarioById(id: ID!): Usuario,
    
    #Personal
    getAllPersonal: [Personal],
    getPersonalById(id: ID!): Personal,
    
    #Cliente
    getAllClientes: [Cliente],
    getClienteById(id: ID!): Cliente,
    
    #Citas
    getAllCitas: [Cita],
    getCitaById(id: ID!): Cita,
    
    #Servicios
    getAllServicios: [Servicio],
    getServicioById(id: ID!): Servicio,
    
    #NotaVenta
    getAllNotasVenta: [NotaVenta],
    getNotaVentaById(id: ID!): NotaVenta,
    
    #Marca
    getAllMarcas: [Marca],
    getMarcaById(id: ID!): Marca,
    
    #Vehiculo
    getAllVehiculos: [Vehiculo],
    getVehiculoById(id: ID!): Vehiculo,
    
    #DetalleVentaServicio
    getDetalleVentaServicioById(id: ID!): DetalleVentaServicio,
    getAllDetalleVentaServicioOfNotaVenta(notaVentaId: ID!): [DetalleVentaServicio],    
}

type Mutation {

	#Usuario
    createUsuario(nombreUsuario: String!, email: String!, password: String!, tipo: String!, usuarioId: String!): Usuario,
    updateUsuario(id: ID!, nombreUsuario: String, email: String, password: String, tipo: String): Usuario,
    deleteUsuario(id: ID!): Boolean,
    
    #Personal
    createPersonal(nombre: String!, apellido: String!, ci: String!, direccion: String!, celular: String!, fechaNacimiento: String!, usuarioId: String!): Personal,
    updatePersonal(id: ID!, nombre: String, apellido: String, ci: String, direccion: String, celular: String, fechaNacimiento: String): Personal,
    deletePersonal(id: ID!): Boolean,
    
    #Cliente
    createCliente(nombre: String!, apellido: String!, celular: String!, nit: String!, usuarioId: String!): Cliente,
    updateCliente(id: ID!, nombre: String, apellido: String, celular: String, nit: String, usuarioId: String): Cliente,
    deleteCliente(id: ID!): Boolean,
    
    #Citas
    createCita(fecha: String!, hora: String!, estado: String!, usuarioId: String!, personalId: String!): Cita,
    updateCita(id: ID!, fecha: String, hora: String, estado: String, usuarioId: String, personalId: String): Cita,
    deleteCita(id: ID!): Boolean,
    
    #Servicio
    createServicio(nombre: String!, descripcion: String!, tipo: String!, tarifaBase: Float!): Servicio,
    updateServicio(id: ID!, nombre: String, descripcion: String, tipo: String!, tarifaBase: Float): Servicio,
    deleteServicio(id: ID!): Boolean,
    
    #NotaVenta
    createNotaVenta(fecha: String!, total: Float!, saldo: Float!, interes: Float!): NotaVenta,
    updateNotaVenta(id: ID!, fecha: String, total: Float, saldo: Float, interes: Float): NotaVenta,
    deleteNotaVenta(id: ID!): Boolean,
    
    #Marca    
    createMarca(nombre: String!, porcentaje: Float!): Marca,
    updateMarca(id: ID!, nombre: String, porcentaje: Float): Marca,
    deleteMarca(id: ID!): Boolean,
    
    #Vehiculo
    createVehiculo(matricula: String!, color: String!, descripcion: String!, modelo: String!, marcaId: String!): Vehiculo,
    updateVehiculo(id: ID!, matricula: String, color: String, descripcion: String, modelo: String, marcaId: String): Vehiculo,
    deleteVehiculo(id: ID!): Boolean,
    
    #DetalleVentaServicio
    createDetalleVentaServicio(monto: Float!, servicioId: String!, notaVentaId: String!): DetalleVentaServicio,
    deleteDetalleVentaServicio(id: ID!): Boolean,
}

type Usuario {
    id: ID,
    nombreUsuario: String,
    email: String,
    password: String,
    tipo: String
}

type Personal {
    id: ID,
    nombre: String,
    apellido: String,
    ci: String,
    direccion: String,
    celular: String,
    fechaNacimiento: String,
    usuarioId: String
}

type Cliente {
    id: ID,
    nombre: String,
    apellido: String,
    celular: String,
    nit: String,
    usuarioId: String
}

type Cita {
    id: ID,
    fecha: String,
    hora: String,
    estado: String,
    usuarioId: String,
    personalId: String
}

type Servicio {
    id: ID,
    nombre: String,
    descripcion: String,
    tipo: String,
    tarifaBase: Float,
}

type NotaVenta {
    id: ID,
    fecha: String,
    total: Float,
    saldo: Float,
    interes: Float,
    subtotal: Float,
    codigoSeguimiento: String
}

type Marca {
    id: ID
    nombre: String
    porcentaje: Float
}


type Vehiculo {
    id: ID,
    matricula: String,
    color: String,
    descripcion: String,
    modelo: String,
    marcaId: String
}

type DetalleVentaServicio {
    id: ID,
    monto: Float,
    servicioId: String,
    notaVentaId: String
}