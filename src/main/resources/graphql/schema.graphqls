type Query {
	#Usuario
    allUsuarios: [Usuario],
    usuarioById(id: ID!): Usuario,
    login(email: String!, password: String!): Usuario,
    
    #Personal
    getAllPersonal: [Personal],
    getPersonalById(id: ID!): Personal,
    
    #Cliente
    getAllClientes: [Cliente],
    getClienteById(id: ID!): Cliente,
    
    #Citas
    getAllCitas: [Cita],
    getCitaById(id: ID!): Cita,
    
    #Servicios
    getAllServicios: [Servicio],
    getServicioById(id: ID!): Servicio,
    
    #NotaVenta
    getAllNotasVenta: [NotaVenta],
    getNotaVentaById(id: ID!): NotaVenta,
    
    #Marca
    getAllMarcas: [Marca],
    getMarcaById(id: ID!): Marca,
    
    #Vehiculo
    getAllVehiculos: [Vehiculo],
    getVehiculoById(id: ID!): Vehiculo,
    getVehiculoByMatricula(matricula: String!): Vehiculo
    
    #Salida
    getAllSalida: [Salida],
    getSalidaById(id: ID!): Salida,
    
    #DetalleSalida
    getDetalleSalidaById(id: ID!): DetalleSalida,
    getAllDetalleSalidaOfNotaSalida(notaSalidaId: ID!): [DetalleSalida],
    
    #Proveedor
    getAllProveedor: [Proveedor],
    getProveedorById(id: ID!): Proveedor,
    
    #Producto
    getAllProducto: [Producto],
    getProductoById(id: ID!): Producto,

    #DetalleVentaServicio
    getDetalleVentaServicioById(id: ID!): DetalleVentaServicio,
    getAllDetalleVentaServicioOfNotaVenta(notaVentaId: ID!): [DetalleVentaServicio],    
    
    #PlanDePago
    getPlanDePagoById(id: ID!): PlanDePago,
    getAllPlanesDePago: [PlanDePago],
    
    #DetalleDePago
    getDetalleDePagoById(id: ID!): DetalleDePago,    
    getAllDetallesDePagoByPlanDePagoId(planDePagoId: ID!): [DetalleDePago],
    
    #OrdenDeTrabajo
    getOrdenDeTrabajoById(id: ID!): OrdenDeTrabajo,    
    getAllOrdenesDeTrabajo: [OrdenDeTrabajo],
    getAllOrdenesDeTrabajoByDetalleVentaServicioId(detalleVentaServicioId: ID!): [OrdenDeTrabajo],
    getAllOrdenesDeTrabajoByPersonalId(personalId: String!): [OrdenDeTrabajo],
    
    #NotaCompra
    getAllNotasCompra: [NotaCompra],
    getNotaCompraById(id: ID!): NotaCompra,
    
    #Entrada
    getAllEntradas: [Entrada],
    getEntradaById(id: ID!): Entrada,
    
    #NotaDevolucion
    getAllNotasDevolucion: [NotaDevolucion],
    getNotaDevolucionById(id: ID!): NotaDevolucion,
    
    #DetalleCompra
    getDetalleCompraById(id: ID!): DetalleCompra,
    getAllDetalleCompraOfNotaCompra(notaCompraId: ID!): [DetalleCompra],
    
    #DetalleDevolucion
    getDetalleDevolucionById(id: ID!): DetalleDevolucion,
    getAllDetalleDevolucionOfNotaDevolucion(notaDevolucionId: ID!): [DetalleDevolucion],
    
    #DetalleEntrada
    getDetalleEntradaById(id: ID!): DetalleEntrada,
    getAllDetalleEntradaOfNotaEntrada(notaEntradaId: ID!): [DetalleEntrada],
    
    #DetalleVentaProducto
    getDetalleVentaProductoById(id: ID!): DetalleVentaProducto,
    getAllDetalleVentaProductoOfNotaVenta(notaVentaId: ID!): [DetalleVentaProducto],
}

type Mutation {

	#Usuario
    createUsuario(nombreUsuario: String!, email: String!, password: String!, tipo: String!): Usuario,
    updateUsuario(id: ID!, nombreUsuario: String, email: String, password: String, tipo: String): Usuario,
    deleteUsuario(id: ID!): Boolean,
    
    #Personal
    createPersonal(nombre: String!, apellido: String!, ci: String!, direccion: String!, celular: String!, fechaNacimiento: String!, usuarioId: String): Personal,
    updatePersonal(id: ID!, nombre: String, apellido: String, ci: String, direccion: String, celular: String, fechaNacimiento: String): Personal,
    deletePersonal(id: ID!): Boolean,
    
    #Cliente
    createCliente(nombre: String!, apellido: String!, celular: String!, nit: String!, usuarioId: String): Cliente,
    updateCliente(id: ID!, nombre: String, apellido: String, celular: String, nit: String, usuarioId: String): Cliente,
    deleteCliente(id: ID!): Boolean,
    
    #Citas
    createCita(fecha: String!, hora: String!, estado: String!, usuarioId: String!, personalId: String!): Cita,
    updateCita(id: ID!, fecha: String, hora: String, estado: String, usuarioId: String, personalId: String): Cita,
    deleteCita(id: ID!): Boolean,
    
    #Servicio
    createServicio(nombre: String!, descripcion: String!, tipo: String!, tarifaBase: Float!): Servicio,
    updateServicio(id: ID!, nombre: String, descripcion: String, tipo: String!, tarifaBase: Float): Servicio,
    deleteServicio(id: ID!): Boolean,
    
    #NotaVenta
    createNotaVenta(fecha: String!, interes: Float!, clienteId: String!): NotaVenta,
    updateNotaVenta(id: ID!, fecha: String, interes: Float): NotaVenta,
    deleteNotaVenta(id: ID!): Boolean,
    
    #Marca    
    createMarca(nombre: String!, porcentaje: Float!): Marca,
    updateMarca(id: ID!, nombre: String, porcentaje: Float): Marca,
    deleteMarca(id: ID!): Boolean,
    
    #Vehiculo
    createVehiculo(matricula: String!, color: String!, descripcion: String!, modelo: String!, marcaId: String!): Vehiculo,
    updateVehiculo(id: ID!, matricula: String, color: String, descripcion: String, modelo: String, marcaId: String): Vehiculo,
    deleteVehiculo(id: ID!): Boolean,
    
    #Salida
    createSalida(fecha: String!, motivo: String!, hora: String!,productoId :String!, cantidad:Int): Salida,
    updateSalida(id : ID!,fecha: String!, motivo: String!, hora: String!): Salida,
    createSalidaManual(fecha: String!, motivo: String!, hora: String!,productoId :String!, cantidad:Int): Salida,
    deleteSalida(id: ID!): Boolean,
    
    #DetalleSalida
    createDetalleSalida(cantidad: Int!, productoId: ID!, notaSalidaId: ID!): DetalleSalida,
    deleteDetalleSalida(id: ID!): Boolean,
    
    #Proveedor
    createProveedor(nombre: String!, descripcion: String!, direccion: String!, celular: String!, email: String!): Proveedor,
    updateProveedor(id: ID!, nombre: String, descripcion: String, direccion: String, celular: String, email: String): Proveedor,
    deleteProveedor(id: ID!): Boolean,
    
	#Producto
	createProducto(nombre: String!, descripcion: String!, precio: Float!, stock: String!): Producto
	updateProducto(id: String!, nombre: String!, descripcion: String!, precio: Float!, stock: String!): Producto
	deleteProducto(id: String!): Boolean

    #DetalleVentaServicio
    createDetalleVentaServicio(vehiculoId: String!, servicioId: String!, notaVentaId: String!): DetalleVentaServicio,
    deleteDetalleVentaServicio(id: ID!): Boolean,
    
    #PlanDePago
    createPlanDePago(fechaInicio: String!, cantidadCuotas: Int!, montoCuota: Float!, tiempoCuota: String!, tipo: String!, notaVentaId: String!): PlanDePago,
    updatePlanDePago(id: ID!, fechaInicio: String, cantidadCuotas: Int, montoCuota: Float, tiempoCuota: String, tipo: String): PlanDePago,
    deletePlanDePago(id: ID!): Boolean,
    
    #DetallePlanDePago
    createDetalleDePago(fechaPago: String!, monto: Float!, estadoPago: String!, planDePagoId: String!): DetalleDePago,
    updateDetalleDePago(id: ID!, fechaPago: String, estadoPago: String): DetalleDePago,
    deleteDetalleDePago(id: ID!): Boolean,
    
    #OrdenDeTrabajo
    createOrdenDeTrabajo(fechaInicio: String!, fechaFin: String!, estado: String!, observacion: String!, personalId: String!, detalleVentaServicioId: String!): OrdenDeTrabajo,
    updateOrdenDeTrabajo(id: ID!, fechaInicio: String, fechaFin: String, estado: String, observacion: String, personalId: String, detalleVentaServicioId: String): OrdenDeTrabajo,
    deleteOrdenDeTrabajo(id: ID!): Boolean,
    
    #NotaCompra
    createNotaCompra(fecha: String!, montoTotal: Float!, personalId: String!): NotaCompra,
    updateNotaCompra(id: ID!, fecha: String, montoTotal: Float, personalId: String): NotaCompra,
    deleteNotaCompra(id: ID!): Boolean,
    
    #Entrada
    createEntrada(fecha: String!, motivo: String!, hora: String!,productoId: String!,cantidad: Int!): Entrada,
    updateEntrada(id: ID!, fecha: String, motivo: String, hora: String): Entrada,
    deleteEntrada(id: ID!): Boolean,
    
    #NotaDevolucion
    createNotaDevolucion(fecha: String!, motivo: String!, montoTotal: Float!, notaVentaId: String!): NotaDevolucion,
    updateNotaDevolucion(id: ID!, fecha: String, motivo: String, montoTotal: Float, notaVentaId: String): NotaDevolucion,
    deleteNotaDevolucion(id: ID!): Boolean,
    
    #DetalleCompra
    createDetalleCompra(monto: Float!, cantidad: Int!, productoId: ID!, notaCompraId: ID!): DetalleCompra,
    deleteDetalleCompra(id: ID!): Boolean,
    
    #DetalleDevolucion
    createDetalleDevolucion(cantidad: Int!, monto: Float!, productoId: ID!, notaDevolucionId: ID!): DetalleDevolucion,
    deleteDetalleDevolucion(id: ID!): Boolean,
    
    #DetalleEntrada
    createDetalleEntrada(cantidad: Int!, productoId: ID!, notaEntradaId: ID!): DetalleEntrada,
    deleteDetalleEntrada(id: ID!): Boolean,
    
    #DetalleVentaProducto    
    createDetalleVentaProducto(precioUnitario: Float!, cantidad: Int!, montoTotal: Float!, notaVentaId: ID!, productoId: ID!): DetalleVentaProducto,
    deleteDetalleVentaProducto(id: ID!): Boolean,
}

type Usuario {
    id: ID,
    nombreUsuario: String,
    email: String,
    password: String,
    tipo: String
}

type Personal {
    id: ID,
    nombre: String,
    apellido: String,
    ci: String,
    direccion: String,
    celular: String,
    fechaNacimiento: String,
    usuarioId: String
}

type Cliente {
    id: ID,
    nombre: String,
    apellido: String,
    celular: String,
    nit: String,
    usuarioId: String
}

type Cita {
    id: ID,
    fecha: String,
    hora: String,
    estado: String,
    usuarioId: String,
    personalId: String
}

type Servicio {
    id: ID,
    nombre: String,
    descripcion: String,
    tipo: String,
    tarifaBase: Float,
}

type NotaVenta {
    id: ID,
    fecha: String,
    total: Float,
    saldo: Float,
    interes: Float,
    subtotal: Float,
    codigoSeguimiento: String,
    clienteId: String
}

type DetalleVentaProducto {
    id: ID,
    precioUnitario: Float,
    cantidad: Int,
    montoTotal: Float,
    notaVentaId: String,
    productoId: String
}

type Marca {
    id: ID,
    nombre: String,
    porcentaje: Float
}


type Vehiculo {
    id: ID,
    matricula: String,
    color: String,
    descripcion: String,
    modelo: String,
    marcaId: String
}

type Producto {
  id: ID,
  nombre: String,
  descripcion: String,
  precio: Float,
  stock: String
}

type Proveedor {
  id: ID,
  nombre: String,
  direccion: String,
  celular: String,
  email: String,
  descripcion: String
}

type Salida {
  id: ID,
  fecha: String,
  motivo: String,
  hora: String,
  productoId: String,
  cantidad :Int
}

type DetalleSalida {
  	id: ID,
    cantidad: Int,
    productoId: String,
    notaSalidaId: String
}

type DetalleVentaServicio {
    id: ID,
    monto: Float,
    vehiculoId: String,
    servicioId: String,
    notaVentaId: String
}

type PlanDePago {
    id: ID,
    fechaInicio: String,
    cantidadCuotas: Int,
    montoCuota: Float,
    tiempoCuota: String,
    tipo: String,
    notaVentaId: String
}

type DetalleDePago {
    id: ID,
    fechaPago: String,
    monto: Float,
    estadoPago: String,
    planDePagoId: String
}

type OrdenDeTrabajo {
    id: ID,
    fechaInicio: String,
    fechaFin: String,
    estado: String,
    observacion: String,
    personalId: String,
    detalleVentaServicioId: String
}

type NotaCompra {
    id: ID,
    fecha: String,
    montoTotal: Float,
    personalId: String
}

type Entrada {
    id: ID,
    fecha: String,
    motivo: String,
    hora: String,
    productoId: String,
    cantidad: Int
}

type NotaDevolucion {
    id: ID,
    fecha: String,
    motivo: String,
    montoTotal: Float,
    notaVentaId: String
}

type DetalleCompra {
    id: ID,
    monto: Float,
    cantidad: Int,
    productoId: String,
    notaCompraId: String
}

type DetalleDevolucion {
    id: ID,
    cantidad: Int,
    monto: Float,
    productoId: String,
    notaDevolucionId: String
}

type DetalleEntrada {
    id: ID,
    cantidad: Int,
    productoId: String,
    notaEntradaId: String
}
